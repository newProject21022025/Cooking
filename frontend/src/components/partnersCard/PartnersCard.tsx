// src/components/partnersCard/PartnersCard.tsx
"use client";

import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { AppDispatch, RootState } from "@/redux/store";
import {
  fetchPartners,
  setSelectedPartner,
} from "@/redux/slices/partnersSlice";
import { useRouter, usePathname } from "next/navigation";
import styles from "./PartnersCard.module.scss";
import Icon_heart_yellow from "@/svg/Icon_heart/Icon_heart_yellow";
import Icon_Time_green from "@/svg/Icon_Time/Icon_Time_green";

const PartnersCard = () => {
  const dispatch = useDispatch<AppDispatch>();
  const router = useRouter();
  const pathname = usePathname();
  const locale = pathname.split("/")[1];

  const { partners, loading, error } = useSelector(
    (state: RootState) => state.partners
  );

  useEffect(() => {
    dispatch(fetchPartners());
  }, [dispatch]);

  const handlePartnerClick = (partnerId: string) => {
    dispatch(setSelectedPartner(partnerId));
    router.push(`/${locale}/buyDishes/dishes?partnerId=${partnerId}`);
  };

  if (loading)
    return <div className={styles.loading}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤...</div>;
  if (error) return <div className={styles.error}>–ü–æ–º–∏–ª–∫–∞: {error}</div>;

  return (
    <div className={styles.container}>
      <div className={styles.list}>
        {partners.map((partner) => {
          // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ firstName —Ç–∞/–∞–±–æ lastName –¥–ª—è –Ω–∞–∑–≤–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É
          const partnerName = partner.firstName || "–ü–∞—Ä—Ç–Ω–µ—Ä";
          // –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —Ä–µ–π—Ç–∏–Ω–≥ —î, –∞–±–æ —Å—Ç–∞–≤–∏–º–æ 4.5 –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
          // üí° –ó–ú–Ü–ù–ê –¢–£–¢: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ 4.2
          const minRating = 4.2; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Math.max, —â–æ–± –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏—Å—è, —â–æ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–µ –º–µ–Ω—à–∏–π –∑–∞ 4.2 // –Ø–∫—â–æ partner.rating –≤—ñ–¥—Å—É—Ç–Ω—ñ–π (null/undefined), –±–µ—Ä–µ–º–æ 4.2.
          const rating = Math.max(partner.rating ?? minRating, minRating);

          return (
            <div key={partner.id} className={styles.card}>
              <div className={styles.imageWrapper}>
                {partner.photo ? (
                  <img
                    src={partner.photo}
                    alt={partnerName}
                    className={styles.partnerImage}
                  />
                ) : (
                  <div className={styles.placeholderImage}>{partnerName}</div>
                )}
              </div>

              <div className={styles.content}>
                <div className={styles.header}>
                  <h3 className={styles.partnerName}>{partnerName}</h3>

                  <div className={styles.rating}>
                    <span className={styles.heartIcon}>
                      <Icon_heart_yellow />
                    </span>
                    <span className={styles.ratingValue}>{rating}</span>
                    {/* <span className={styles.reviewCount}>(49)</span>{" "} */}
                  </div>
                </div>
                <div>
                  <p className={styles.description}>
                    {partner.description || "–°–º–∞—á–Ω—ñ —Å—Ç—Ä–∞–≤–∏ –≤–¥–æ–º–∞ –∑–∞ 30 - 45 —Ö–≤"}
                  </p>
                  <p className={styles.callToAction}>–ó–∞–º–æ–≤–ª—è–π—Ç–µ –∑–∞—Ä–∞–∑!</p>
                </div>

                {/* 3. –°–µ–∫—Ü—ñ—è –¥–æ—Å—Ç–∞–≤–∫–∏ (–ü—Ä–∏–∫–ª–∞–¥) */}
                <div className={styles.deliveryInfo}>
                  <span className={styles.deliveryIcon}><Icon_Time_green/>  </span>                 
                  –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –º—ñ—Å—Ç—É –≤—ñ–¥ 500 ‚Ç¥
                </div>
                {/* 4. –ö–Ω–æ–ø–∫–∞ –¥—ñ—ó */}
                <button
                  className={styles.orderButton}
                  onClick={() => handlePartnerClick(partner.id)}
                >
                  –ó–∞–º–æ–≤–∏—Ç–∏ —Å—Ç—Ä–∞–≤–∏
                </button>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default PartnersCard;
