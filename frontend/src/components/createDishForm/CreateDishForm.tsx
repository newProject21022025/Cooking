// src/components/createDishForm/CreateDishForm.tsx
"use client";

import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import styles from "./CreateDishForm.module.scss";
import { createDishApi } from "@/api/dishesApi";
import IngredientsTable from "./constants/IngredientsTable";

const validationSchema = Yup.object({
  name_ua: Yup.string().required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"),
  name_en: Yup.string().required("Required"),
  type: Yup.string().required("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Å—Ç—Ä–∞–≤–∏"),
  description_ua: Yup.string().required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"),
  description_en: Yup.string().required("Required"),
  photo: Yup.string().url("–ú–∞—î –±—É—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è").required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"),
  // standard_servings: Yup.number().min(1).required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"), // ‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ
  recipe_ua: Yup.string().required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"),
  recipe_en: Yup.string().required("Required"),
});

const dishTypes = [
  { value: "first_course", label: "ü•ò –ü–µ—Ä—à–µ –±–ª—é–¥–æ / First course" },
  { value: "side_dish", label: "üçö –ì–∞—Ä–Ω—ñ—Ä / Side dish" },
  { value: "salad", label: "ü•ó –°–∞–ª–∞—Ç / Salad" },
  { value: "appetizer", label: "üç¢ –ó–∞–∫—É—Å–∫–∞ / Appetizer" },
];

export default function CreateDishForm() {
  return (
    <div className={styles.formWrapper}>
      <h2 className={styles.title}>–°—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç—Ä–∞–≤—É</h2>
      <Formik
        initialValues={{
          name_ua: "",
          name_en: "",
          type: "",
          description_ua: "",
          description_en: "",
          photo: "",
          // standard_servings: 1, // ‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ
          important_ingredients: [],
          optional_ingredients: [],
          recipe_ua: "",
          recipe_en: "",
        }}
        validationSchema={validationSchema}
        onSubmit={async (values, { resetForm }) => {
          try {
            // ‚úÖ –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ–π
            const dataToSend = {
              ...values,
              standard_servings: 1,
              // ‚úÖ –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ª–µ category –∑ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤
              important_ingredients: values.important_ingredients.map(({ category, ...rest }) => rest),
              optional_ingredients: values.optional_ingredients.map(({ category, ...rest }) => rest),
            };

            await createDishApi(dataToSend);
            alert("‚úÖ –°—Ç—Ä–∞–≤–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!");
            resetForm();
          } catch (err) {
            console.error(err);
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Å—Ç—Ä–∞–≤–∏");
          }
        }}
      >
        {({ values }) => (
          <Form className={styles.form}>
            {/* –ù–∞–∑–≤–∏ */}
            <div className={styles.field}>
              <label>–ù–∞–∑–≤–∞ (UA)</label>
              <Field name="name_ua" placeholder="–ë–æ—Ä—â" />
              <ErrorMessage
                name="name_ua"
                component="div"
                className={styles.error}
              />
            </div>

            <div className={styles.field}>
              <label>Name (EN)</label>
              <Field name="name_en" placeholder="Borscht" />
              <ErrorMessage
                name="name_en"
                component="div"
                className={styles.error}
              />
            </div>

            {/* –¢–∏–ø —Å—Ç—Ä–∞–≤–∏ */}
            <div className={styles.field}>
              <label>–¢–∏–ø —Å—Ç—Ä–∞–≤–∏</label>
              <Field as="select" name="type">
                <option value="">-- –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø --</option>
                {dishTypes.map((t) => (
                  <option key={t.value} value={t.value}>
                    {t.label}
                  </option>
                ))}
              </Field>
              <ErrorMessage
                name="type"
                component="div"
                className={styles.error}
              />
            </div>

            {/* –û–ø–∏—Å */}
            <div className={styles.field}>
              <label>–û–ø–∏—Å (UA)</label>
              <Field as="textarea" name="description_ua" />
            </div>
            <div className={styles.field}>
              <label>Description (EN)</label>
              <Field as="textarea" name="description_en" />
            </div>

            {/* –§–æ—Ç–æ */}
            <div className={styles.field}>
              <label>–§–æ—Ç–æ (URL)</label>
              <Field name="photo" placeholder="https://example.com/image.jpg" />
            </div>

            {/* ‚úÖ –ë–ª–æ–∫ –¥–ª—è "–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ—Ä—Ü—ñ–π" –≤–∏–¥–∞–ª–µ–Ω–æ */}
            
            {/* –û—Å–Ω–æ–≤–Ω—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ */}
            <IngredientsTable
              name="important_ingredients"
              label="–û—Å–Ω–æ–≤–Ω—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏"
              type="main"
            />

            {/* –ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ */}
            <IngredientsTable
              name="optional_ingredients"
              label="–ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏"
              type="optional"
            />

            {/* –†–µ—Ü–µ–ø—Ç */}
            <div className={styles.field}>
              <label>–†–µ—Ü–µ–ø—Ç (UA)</label>
              <Field as="textarea" name="recipe_ua" />
            </div>
            <div className={styles.field}>
              <label>Recipe (EN)</label>
              <Field as="textarea" name="recipe_en" />
            </div>

            <button type="submit" className={styles.submitBtn}>
              ‚úÖ –ó–±–µ—Ä–µ–≥—Ç–∏
            </button>
          </Form>
        )}
      </Formik>
    </div>
  );
}