// src/components/UserLoader.tsx
"use client";

import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { fetchUser, clearUser } from "@/redux/userSlice";
import { RootState, AppDispatch } from "@/redux/store";
import { setAuthToken } from "@/api/commentsApi"; // üëà –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é setAuthToken
import { logout } from "@/redux/slices/authSlice"; // üí° –Ü–º–ø–æ—Ä—Ç—É—î–º–æ logout

const API_URL = `${process.env.NEXT_PUBLIC_BACKEND_URL}/auth/profile`;

interface UserLoaderProps {
  children: React.ReactNode;
}

const UserLoader: React.FC<UserLoaderProps> = ({ children }) => {
  const dispatch = useDispatch<AppDispatch>(); // üí° –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –¥–∞–Ω—ñ –∑ userSlice
  const { loading, data: userProfile } = useSelector(
    (state: RootState) => state.user
  ); // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω —Ç–∞ —Å—Ç–∞–Ω –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –∑ authSlice
  const { token } = useSelector((state: RootState) => state.auth);
  const isAuthenticated = !!token;

  useEffect(() => {
    setAuthToken(token); // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ç–æ–∫–µ–Ω –¥–ª—è API-–∑–∞–ø–∏—Ç—ñ–≤

    if (!token) {
      dispatch(clearUser()); // –û—á–∏—â—É—î–º–æ userSlice
      return;
    }

    const loadUser = async () => {
      try {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–æ–∫–µ–Ω, –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–∏–π —ñ–∑ localStorage
        const response = await fetch(API_URL, {
          headers: { Authorization: `Bearer ${token}` },
        });

        if (!response.ok) {
          if (response.status === 401) {
            // üí° –Ø–∫—â–æ —Ç–æ–∫–µ–Ω –Ω–µ–¥—ñ–π—Å–Ω–∏–π:
            localStorage.removeItem("token");
            localStorage.removeItem("user"); // –û—á–∏—â—É—î–º–æ —Ç–∞–∫–æ–∂ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
            dispatch(logout()); // üí° –í–∏–∫–ª–∏–∫–∞—î–º–æ logout, —â–æ–± –æ—á–∏—Å—Ç–∏—Ç–∏ authSlice
            dispatch(clearUser());
            return;
          }
          throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å");
        }

        const userData = await response.json(); // üí° –û–Ω–æ–≤–ª—é—î–º–æ userSlice, —â–æ–± Header –º—ñ–≥ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ —Ä–æ–ª—å // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ userData.id —è–∫ 'meta.arg' –¥–ª—è fulfill action
        dispatch(fetchUser.fulfilled(userData, "", userData.id));
      } catch (err: unknown) {
        const error = err as { message?: string };
        console.error(
          "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:",
          error.message ?? err
        );
        dispatch(clearUser());
      }
    }; // üí° –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ, –ª–∏—à–µ —è–∫—â–æ –≤–æ–Ω–∏ —â–µ –Ω–µ –±—É–ª–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ

    if (!userProfile) {
      loadUser();
    }
  }, [token, dispatch, userProfile]); // üí° –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ª–∏—à–µ —è–∫—â–æ —î —Ç–æ–∫–µ–Ω, –∞–ª–µ –¥–∞–Ω—ñ —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ

  if (loading && isAuthenticated && !userProfile) {
    return <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...</div>;
  }

  return <>{children}</>;
};

export default UserLoader;
