// src/app/[locale]/layout.tsx

import { routing } from "@/i18n/routing";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { ReactNode } from "react";
import Header from "@/components/header/Header";
import "../styles/globals.scss"; // Your global styles file (ensure the path is correct)

import { ReduxProvider } from "@/providers/ReduxProvider"; // Import the new ReduxProvider wrapper

type Props = {
  children: ReactNode;
  params: { locale: string };
};

export default async function LocaleLayout({ children, params }: Props) {
  const { locale } = await params; // await params is correct here for next-intl

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  // ‚ú® –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞–ª–∏
  let messages;
  try {
    messages = (await import(`../../../messages/${locale}.json`)).default;
  } catch (error) {
    // Fallback –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ñ–∞–π–ª –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω
    console.error(`Could not load messages for locale ${locale}:`, error);
    notFound(); // –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø–∞—Å–Ω–æ–π —è–∑—ã–∫ / –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  }

  return (
    <html lang={locale}>
      <body>
        <ReduxProvider>
          {/* ‚ú® –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ NextIntlClientProvider */}
          <NextIntlClientProvider locale={locale} messages={messages}>
            <Header locale={locale} />
            {children}
          </NextIntlClientProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}

// import { routing } from "@/i18n/routing";
// import { hasLocale, NextIntlClientProvider } from "next-intl";
// import { notFound } from "next/navigation";
// import { ReactNode } from "react";
// import Header from "@/components/header/Header";
// // import Footer from "@/components/footer/Footer";
// // import ScrollToTopOnNavigation from "@/components/scrollToTopOnNavigation/ScrollToTopOnNavigation";
// import "../styles/globals.scss";
// // import { ReduxProvider } from "@/providers/ReduxProvider";
// // import { UserLoader } from "../../redux/UserLoader";
// // import { LogVisitClient } from "./LogVisitClient"; // üìå –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–≥—É–≤–∞–Ω–Ω—è

// type Props = {
//   children: ReactNode;
//   params: Promise<{ locale: string }>;
// };

// export default async function LocaleLayout({ children, params }: Props) {
//   const { locale } = await params;
//   if (!hasLocale(routing.locales, locale)) {
//     notFound();
//   }

//   return (
//     <html lang={locale}>
//       {/* <head>
//         <title>next-intl-bug-repro-app-router</title>
//         <link rel="preconnect" href="https://fonts.googleapis.com" />
//         <link
//           rel="preconnect"
//           href="https://fonts.gstatic.com"
//           crossOrigin="anonymous"
//         />
//         <link
//           href="https://fonts.googleapis.com/css2?family=Lora:wght@400;700&family=Poppins:wght@400;500;600;700&family=Mea+Culpa&display=swap"
//           rel="stylesheet"
//         />
//       </head> */}
//       <body>
//         {/* <ReduxProvider>
//           <UserLoader />
//           <LogVisitClient /> */}
//           <NextIntlClientProvider locale={locale}>
//             <Header locale={locale} />
//             {children}
//             {/* <ScrollToTopOnNavigation />
//             <Footer /> */}
//           </NextIntlClientProvider>
//         {/* </ReduxProvider> */}
//       </body>
//     </html>
//   );
// }
